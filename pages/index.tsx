import axios, { AxiosError } from "axios";
import Cookies from "js-cookie";
import Head from "next/head";
import Link from "next/link";
import { useRouter } from "next/router";
import React, { useCallback, useEffect, useState } from "react";
import styles from "../styles/Home.module.css";

export default function Home() {
  const [username, setName] = useState("");
  const [password, setPass] = useState("");
  const [islogin, setIsLogin] = useState(false);
  const router = useRouter();

  function inputChangeHandler(e: React.SyntheticEvent) {
    const inputElement = e.target as HTMLInputElement;
    if (inputElement.name === "name") {
      setName(inputElement.value);
    }
    if (inputElement.name === "pass") {
      setPass(inputElement.value);
    }
  }

  useEffect(() => {
    router.prefetch("/dashboard");
  });

  function checkboxHandler(e: React.MouseEvent) {
    setIsLogin(!islogin);
  }

  const formHandler = useCallback(
    async (e: React.SyntheticEvent) => {
      e.preventDefault();
      try {
        const res = await axios.post("http://localhost:3000/api/clientloginreq", {
          username,
          password,
          islogin,
        });
        Cookies.set("loggedin", res.data.loggedAs);
        router.push("/dashboard");
      } catch(error) {
        islogin
        ?setName("Incorrect credentials!")
        :setName("User already exists!")
      }
      return;
    },
    [username, password, islogin]
  );

  return (
    <div className={styles.container}>
      <Head>
        <title>{"_"}</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <Link href={"/"}>
          <h1>Home</h1>
        </Link>
        <form onSubmit={formHandler}>
          <input
            type="text"
            name="name"
            placeholder="username"
            value={username}
            onChange={inputChangeHandler}
            required
          />
          <input
            type={"password"}
            name="pass"
            placeholder="password"
            value={password}
            onChange={inputChangeHandler}
            required
            minLength={8}
          />
          <label>{islogin ? "Log in" : "Sign up"}
            <input type={"checkbox"} onClick={checkboxHandler} />
          </label>
          <button type={"submit"}>submit</button>
        </form>
      </main>
    </div>
  );
}
